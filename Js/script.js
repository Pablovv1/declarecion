document.addEventListener('DOMContentLoaded', () => {
    const confesionElement = document.querySelector('.confesion');
    const originalText = "No puedo guardarme esto m√°s, quiero que lo sepas: me gustas. y cada d√≠a que te veo, me doy cuenta de cu√°nto m√°s me atraes.‚ù§Ô∏è";
    let index = 0;

    function type() {
        if (index < originalText.length) {
            confesionElement.textContent = originalText.slice(0, index + 1);
            index++;
            setTimeout(type, 70);
        }
    }

    type();
});

document.getElementById('btn-si').addEventListener('click', function() {
    document.getElementById('respuesta').innerHTML = '¬°Sab√≠a que dir√≠as que s√≠! ‚ù§Ô∏è<br><span style="font-size: 1.1rem; color: #e75480; margin-top: 0.5rem; display: block;">Se te quiere<span class="beso-animado"> üòò<span class="palabra-besos">ü´¶‚Äã</span></span></span>';
});

const btnNo = document.getElementById('btn-no');

// Funci√≥n para mover el bot√≥n
function moveButton() {
    const btnWidth = btnNo.offsetWidth;
    const btnHeight = btnNo.offsetHeight;
    
    // Detectar si es m√≥vil
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
    
    let padding, safeWidth, safeHeight;
    
    if (isMobile) {
        // Para m√≥viles, usar l√≠mites m√°s conservadores
        padding = 30;
        safeWidth = window.innerWidth - btnWidth - (padding * 6);
        safeHeight = window.innerHeight - btnHeight - (padding * 6);
    } else {
        // Para desktop, usar los l√≠mites originales
        padding = 50;
        safeWidth = window.innerWidth - btnWidth - (padding * 15);
        safeHeight = window.innerHeight - btnHeight - (padding * 15);
    }
    
    // Asegurar que los l√≠mites sean v√°lidos
    safeWidth = Math.max(0, safeWidth);
    safeHeight = Math.max(0, safeHeight);
    
    // Generar posici√≥n aleatoria en el √°rea segura
    const randomX = Math.floor(Math.random() * safeWidth) + padding;
    const randomY = Math.floor(Math.random() * safeHeight) + padding;
    
    // Aplicar posici√≥n
    btnNo.style.position = 'fixed';
    btnNo.style.left = randomX + 'px';
    btnNo.style.top = randomY + 'px';
    btnNo.style.zIndex = '1000';
}

// Detectar si es m√≥vil
const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);

if (isMobile) {
    // Para m√≥viles, usar eventos touch
    btnNo.addEventListener('touchstart', function(e) {
        e.preventDefault();
        moveButton();
    });
    
    btnNo.addEventListener('touchend', function(e) {
        e.preventDefault();
        moveButton();
    });
} else {
    // Para desktop, usar eventos de mouse
    btnNo.addEventListener('mouseenter', moveButton);
}

btnNo.addEventListener('click', function(e) {
    e.preventDefault();
    // No hace nada al hacer click
}); 